{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar enums_1 = require(\"../enums\");\n\nvar DataUtils_1 = require(\"./DataUtils\");\n\nexports.convertToColumnTypes = function (data, columns) {\n  var columnsToReplace = __spreadArrays(columns);\n\n  var dataCopy = __spreadArrays(data);\n\n  columnsToReplace.forEach(function (c) {\n    if (c.dataType && c.dataType !== enums_1.DataType.Object) {\n      for (var i = 0; i < dataCopy.length; i++) {\n        var value = DataUtils_1.getValueByColumn(dataCopy[i], c);\n\n        if (value != null) {\n          switch (c.dataType) {\n            case enums_1.DataType.String:\n              if (value.constructor !== String) {\n                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, value.toString());\n                continue;\n              }\n\n              break;\n\n            case enums_1.DataType.Number:\n              if (value.constructor !== Number) {\n                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, Number(value));\n                continue;\n              }\n\n              break;\n\n            case enums_1.DataType.Date:\n              if (value.constructor !== Date) {\n                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, new Date(value));\n                continue;\n              }\n\n              break;\n\n            case enums_1.DataType.Boolean:\n              if (value.constructor !== Boolean) {\n                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, exports.toBoolean(value));\n                continue;\n              }\n\n              break;\n          }\n\n          break;\n        }\n      }\n    }\n  });\n  return dataCopy;\n};\n\nexports.toBoolean = function (value) {\n  if (typeof value === 'string') {\n    switch (value.toLowerCase().trim()) {\n      case 'true':\n      case 'yes':\n      case '1':\n        return true;\n\n      case 'false':\n      case 'no':\n      case '0':\n      case null:\n        return false;\n    }\n  }\n\n  return Boolean(value);\n};","map":{"version":3,"sources":["D:/Dev76/hms_react/board/node_modules/ka-table/Utils/TypeUtils.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","enums_1","require","DataUtils_1","convertToColumnTypes","data","columns","columnsToReplace","dataCopy","forEach","c","dataType","DataType","getValueByColumn","String","constructor","replaceValue","toString","Number","Date","Boolean","toBoolean","toLowerCase","trim"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar enums_1 = require(\"../enums\");\r\nvar DataUtils_1 = require(\"./DataUtils\");\r\nexports.convertToColumnTypes = function (data, columns) {\r\n    var columnsToReplace = __spreadArrays(columns);\r\n    var dataCopy = __spreadArrays(data);\r\n    columnsToReplace.forEach(function (c) {\r\n        if (c.dataType && c.dataType !== enums_1.DataType.Object) {\r\n            for (var i = 0; i < dataCopy.length; i++) {\r\n                var value = DataUtils_1.getValueByColumn(dataCopy[i], c);\r\n                if (value != null) {\r\n                    switch (c.dataType) {\r\n                        case enums_1.DataType.String:\r\n                            if (value.constructor !== String) {\r\n                                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, value.toString());\r\n                                continue;\r\n                            }\r\n                            break;\r\n                        case enums_1.DataType.Number:\r\n                            if (value.constructor !== Number) {\r\n                                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, Number(value));\r\n                                continue;\r\n                            }\r\n                            break;\r\n                        case enums_1.DataType.Date:\r\n                            if (value.constructor !== Date) {\r\n                                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, new Date(value));\r\n                                continue;\r\n                            }\r\n                            break;\r\n                        case enums_1.DataType.Boolean:\r\n                            if (value.constructor !== Boolean) {\r\n                                dataCopy[i] = DataUtils_1.replaceValue(dataCopy[i], c, exports.toBoolean(value));\r\n                                continue;\r\n                            }\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return dataCopy;\r\n};\r\nexports.toBoolean = function (value) {\r\n    if (typeof value === 'string') {\r\n        switch (value.toLowerCase().trim()) {\r\n            case 'true':\r\n            case 'yes':\r\n            case '1': return true;\r\n            case 'false':\r\n            case 'no':\r\n            case '0':\r\n            case null: return false;\r\n        }\r\n    }\r\n    return Boolean(value);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}