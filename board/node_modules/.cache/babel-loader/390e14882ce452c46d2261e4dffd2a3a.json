{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev76\\\\hms_react\\\\board\\\\src\\\\components\\\\BoardList.js\";\nimport React, { Component } from 'react';\nimport { Table, TableCell, TableRow, TableHead, Input } from '@material-ui/core';\nimport \"ka-table/style.css\";\nimport moment from 'moment'; // 날짜 타입\n// import '../css/default.css';\n\nimport '../css/Board.css';\nimport { Link, BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BoardDetail from './BoardDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BoardList extends Component {\n  // state = {\n  //     board : ''\n  // }\n  // componentDidMount() {\n  //     this.callApi()                        \n  //         .then(res => this.setState({board: res}))    // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\n  //         .catch(err => console.log(err));\n  // }\n  // callApi = async () => {\n  //     const response = await fetch('/api/boardDetail');  // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\n  //     const body = await response.json();\n  //     return body;\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/boardList'); // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\n\n      const body = await response.json();\n      return body;\n    };\n\n    this.state = {\n      value: '',\n      show_update: \"none\",\n      show_delete: \"none\",\n      show_detail: \"none\"\n    };\n  } // 상세버튼 클릭\n\n\n  displayShowClick(boardNo) {\n    if (this.state.show_detail === \"block\") {\n      this.setState({\n        show_detail: \"none\",\n        show_delete: \"none\",\n        show_update: \"none\"\n      });\n    } else {\n      this.setState({\n        show_detail: \"block\",\n        show_delete: \"none\",\n        show_update: \"none\"\n      });\n      fetch('/api/boardCount?boardNo=' + boardNo);\n    }\n  } // // 수정버튼 클릭\n  // displayUpdateClick = (e) => {\n  //     if(this.state.show_update === \"block\") {\n  //         this.setState({\n  //             show_detail: \"none\",\n  //             show_delete: \"none\",\n  //             show_update: \"none\"\n  //         })\n  //     }else{\n  //         this.setState({\n  //             show_detail: \"none\",\n  //             show_delete: \"none\",\n  //             show_update: \"block\"\n  //         }) \n  //     }\n  // }   \n  // // 삭제버튼 클릭\n  // displayDeleteClick = (e) => {\n  //     this.setState({\n  //         show_detail: \"none\",\n  //         show_update: \"none\",\n  //         show_delete: \"block\"\n  //     });\n  // }\n\n\n  // 생명주기\n\n  /* componentDidAmont() 메서드 : 컴포넌트가 마운트 된 직후 호출되며, 데이터로딩과 같은 작업 등에 재정의\r\n  예 ) List에 특정 item들을 출력하고자 할때 item에 들어갈 Data가 Server에 존재한다면 Server에서 읽어와서\r\n  item 데이터가 state에 존재시 이 state에 데이터를 setting하는 작업\r\n  마운트 즉 React 컴포넌트가 실제 DOM에 삽입된 후 서버로부터 데이터를 읽어와서 setState후 화면에 rerendering */\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      board: res\n    })) // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    let regdate = this.props.writeDate;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        class: \"ka-tbody\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"ka-tr ka-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                class: \"btnD\",\n                value: \"\\uC0C1\\uC138\",\n                onClick: () => this.displayShowClick(this.props.boardNo)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: this.props.boardTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: this.props.boardContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: this.props.readCnt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: moment(this.props.writeDate).format('YYYY-MM-DD hh:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: moment(this.props.updateDate).format('YYYY-MM-DD hh:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"/api/boardUpdate\",\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"boardNo\",\n                value: this.props.boardNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list\",\n                style: {\n                  display: this.state.show_detail\n                },\n                display: \"block\",\n                children: /*#__PURE__*/_jsxDEV(BoardDetail, {\n                  boardTitle: this.props.boardTitle,\n                  boardContent: this.props.boardContent,\n                  boardFile1: this.props.boardFile1,\n                  boardFile2: this.props.boardFile2,\n                  updateDate: this.props.updateDate,\n                  readCnt: this.props.readCnt,\n                  writeDate: this.props.writeDate,\n                  boardNo: this.props.boardNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BoardList;","map":{"version":3,"sources":["D:/Dev76/hms_react/board/src/components/BoardList.js"],"names":["React","Component","Table","TableCell","TableRow","TableHead","Input","moment","Link","BrowserRouter","Router","Route","Switch","BoardDetail","BoardList","constructor","props","state","detail","callApi","response","fetch","body","json","value","show_update","show_delete","show_detail","displayShowClick","boardNo","setState","componentDidMount","then","res","board","catch","err","console","log","render","regdate","writeDate","boardTitle","boardContent","readCnt","format","updateDate","display","boardFile1","boardFile2"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,KAA/C,QAA4D,mBAA5D;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAA8B;AAC9B;;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,EAAeC,aAAa,IAAIC,MAAhC,EAAwCC,KAAxC,EAA+CC,MAA/C,QAA4D,kBAA5D;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAKA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAE9B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGAc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SA2DnBC,KA3DmB,GA2DX;AACJC,MAAAA,MAAM,EAAG;AADL,KA3DW;;AAAA,SA0EnBC,OA1EmB,GA0ET,YAAY;AAClB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA5B,CADkB,CAC+B;;AACjD,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KA9EkB;;AAGf,SAAKL,KAAL,GAAa;AACTO,MAAAA,KAAK,EAAG,EADC;AAETC,MAAAA,WAAW,EAAE,MAFJ;AAGTC,MAAAA,WAAW,EAAE,MAHJ;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAOH,GA9B6B,CAkC9B;;;AACAC,EAAAA,gBAAgB,CAACC,OAAD,EAAS;AACrB,QAAG,KAAKZ,KAAL,CAAWU,WAAX,KAA2B,OAA9B,EAAuC;AACnC,WAAKG,QAAL,CAAc;AACVH,QAAAA,WAAW,EAAE,MADH;AAEVD,QAAAA,WAAW,EAAE,MAFH;AAGVD,QAAAA,WAAW,EAAE;AAHH,OAAd;AAKH,KAND,MAMK;AACD,WAAKK,QAAL,CAAc;AACVH,QAAAA,WAAW,EAAE,OADH;AAEVD,QAAAA,WAAW,EAAE,MAFH;AAGVD,QAAAA,WAAW,EAAE;AAHH,OAAd;AAKDJ,MAAAA,KAAK,CAAC,6BAA2BQ,OAA5B,CAAL;AACF;AACJ,GAlD6B,CAqD9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;;AACA;AACJ;AACA;AACA;AACIE,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,OAAL,GACKa,IADL,CACUC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAACI,MAAAA,KAAK,EAAED;AAAR,KAAd,CADjB,EACiD;AADjD,KAEKE,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH;;AASDG,EAAAA,MAAM,GAAG;AACJ,QAAIC,OAAO,GAAG,KAAKxB,KAAL,CAAWyB,SAAzB;AACD,wBACI,QAAC,MAAD;AAAA,6BAEI;AAAO,QAAA,KAAK,EAAC,UAAb;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,cAAV;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,KAAK,EAAC,MAA3B;AAAkC,gBAAA,KAAK,EAAC,cAAxC;AAA6C,gBAAA,OAAO,EAAE,MAAI,KAAKb,gBAAL,CAAsB,KAAKZ,KAAL,CAAWa,OAAjC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,wBAA2B,KAAKb,KAAL,CAAW0B;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ,eASI;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,wBAA2B,KAAK1B,KAAL,CAAW2B;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ,eAYI;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,wBAA2B,KAAK3B,KAAL,CAAW4B;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAeI;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,wBAA2BrC,MAAM,CAAC,KAAKS,KAAL,CAAWyB,SAAZ,CAAN,CAA6BI,MAA7B,CAAoC,kBAApC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAkBI;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,cAAX;AAAA,wBAA2BtC,MAAM,CAAC,KAAKS,KAAL,CAAW8B,UAAZ,CAAN,CAA8BD,MAA9B,CAAqC,kBAArC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAuBI;AAAA,iCACI;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,mCACI;AAAM,cAAA,MAAM,EAAC,kBAAb;AAAgC,cAAA,MAAM,EAAC,MAAvC;AAAA,sCACI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,IAAI,EAAC,SAA1B;AAAoC,gBAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWa;AAAtD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAsB,gBAAA,KAAK,EAAE;AAACkB,kBAAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWU;AAArB,iBAA7B;AAAgE,gBAAA,OAAO,EAAC,OAAxE;AAAA,uCAEI,QAAC,WAAD;AAAa,kBAAA,UAAU,EAAE,KAAKX,KAAL,CAAW0B,UAApC;AAAgD,kBAAA,YAAY,EAAE,KAAK1B,KAAL,CAAW2B,YAAzE;AACI,kBAAA,UAAU,EAAE,KAAK3B,KAAL,CAAWgC,UAD3B;AACuC,kBAAA,UAAU,EAAE,KAAKhC,KAAL,CAAWiC,UAD9D;AAC0E,kBAAA,UAAU,EAAE,KAAKjC,KAAL,CAAW8B,UADjG;AAEI,kBAAA,OAAO,EAAE,KAAK9B,KAAL,CAAW4B,OAFxB;AAEiC,kBAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWyB,SAFvD;AAEkE,kBAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWa;AAFtF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwHH;;AA/N6B;;AAiOlC,eAAef,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Table, TableCell, TableRow, TableHead, Input } from '@material-ui/core';\r\nimport \"ka-table/style.css\";\r\nimport moment from 'moment';  // 날짜 타입\r\n// import '../css/default.css';\r\nimport '../css/Board.css';\r\nimport { Link, BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport BoardDetail from './BoardDetail';\r\n\r\n\r\n\r\n\r\nclass BoardList extends Component {\r\n\r\n    // state = {\r\n    //     board : ''\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     this.callApi()                        \r\n    //         .then(res => this.setState({board: res}))    // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\r\n    //         .catch(err => console.log(err));\r\n    // }\r\n\r\n\r\n    // callApi = async () => {\r\n    //     const response = await fetch('/api/boardDetail');  // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\r\n    //     const body = await response.json();\r\n    //     return body;\r\n    // }\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n       \r\n        this.state = {\r\n            value : '',\r\n            show_update: \"none\",\r\n            show_delete: \"none\",\r\n            show_detail: \"none\"\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 상세버튼 클릭\r\n    displayShowClick(boardNo){\r\n        if(this.state.show_detail === \"block\") {\r\n            this.setState({\r\n                show_detail: \"none\",\r\n                show_delete: \"none\",\r\n                show_update: \"none\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                show_detail: \"block\",\r\n                show_delete: \"none\",\r\n                show_update: \"none\"\r\n            }) \r\n           fetch('/api/boardCount?boardNo='+boardNo)\r\n        }\r\n    }\r\n\r\n    \r\n    // // 수정버튼 클릭\r\n    // displayUpdateClick = (e) => {\r\n    //     if(this.state.show_update === \"block\") {\r\n    //         this.setState({\r\n    //             show_detail: \"none\",\r\n    //             show_delete: \"none\",\r\n    //             show_update: \"none\"\r\n    //         })\r\n    //     }else{\r\n    //         this.setState({\r\n    //             show_detail: \"none\",\r\n    //             show_delete: \"none\",\r\n    //             show_update: \"block\"\r\n    //         }) \r\n    //     }\r\n    // }   \r\n\r\n    // // 삭제버튼 클릭\r\n    // displayDeleteClick = (e) => {\r\n    //     this.setState({\r\n    //         show_detail: \"none\",\r\n    //         show_update: \"none\",\r\n    //         show_delete: \"block\"\r\n    //     });\r\n    // }\r\n\r\n    state = {\r\n        detail : ''\r\n    }\r\n\r\n    // 생명주기\r\n    /* componentDidAmont() 메서드 : 컴포넌트가 마운트 된 직후 호출되며, 데이터로딩과 같은 작업 등에 재정의\r\n    예 ) List에 특정 item들을 출력하고자 할때 item에 들어갈 Data가 Server에 존재한다면 Server에서 읽어와서\r\n    item 데이터가 state에 존재시 이 state에 데이터를 setting하는 작업\r\n    마운트 즉 React 컴포넌트가 실제 DOM에 삽입된 후 서버로부터 데이터를 읽어와서 setState후 화면에 rerendering */\r\n    componentDidMount() {\r\n        this.callApi()                        \r\n            .then(res => this.setState({board: res}))    // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        const response = await fetch('/api/boardList');  // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n   \r\n    render() {\r\n         let regdate = this.props.writeDate;\r\n        return(\r\n            <Router>\r\n                \r\n                <tbody class=\"ka-tbody\">\r\n                    <tr class=\"ka-tr ka-row\">\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">\r\n                                <input type=\"button\" class=\"btnD\" value=\"상세\" onClick={()=>this.displayShowClick(this.props.boardNo)}></input>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{this.props.boardTitle}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{this.props.boardContent}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{this.props.readCnt}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{moment(this.props.writeDate).format('YYYY-MM-DD hh:mm')}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{moment(this.props.updateDate).format('YYYY-MM-DD hh:mm')}</div>\r\n                        </td>\r\n                    </tr> \r\n                    <tr>\r\n                        <td colSpan=\"5\">\r\n                            <form action=\"/api/boardUpdate\" method=\"POST\">\r\n                                <input type=\"hidden\" name=\"boardNo\" value={this.props.boardNo} />\r\n                                <div className=\"list\" style={{display: this.state.show_detail}} display=\"block\" >  \r\n                                    {/* <BoardDetail /> */}\r\n                                    <BoardDetail boardTitle={this.props.boardTitle} boardContent={this.props.boardContent}\r\n                                        boardFile1={this.props.boardFile1} boardFile2={this.props.boardFile2} updateDate={this.props.updateDate}\r\n                                        readCnt={this.props.readCnt} writeDate={this.props.writeDate} boardNo={this.props.boardNo}/>\r\n                                    {/* <Table>\r\n                                        <TableHead>\r\n                                            <TableRow className=\"TableRow\">\r\n                                                <TableCell><b>제목 : {this.props.boardTitle}</b></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><b>내용 : </b></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                            <TableCell>\r\n                                                    <div>\r\n                                                        {this.props.boardContent}\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><img src={this.props.boardFile1}></img></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><img src={this.props.boardFile2}></img></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><b>등록일 : </b>{moment(this.props.writeDate).format('YYYY-MM-DD hh:mm')}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><b>수정일 : </b>{moment(this.props.updateDate).format('YYYY-MM-DD hh:mm')}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                    </Table> */}\r\n                                    {/* <br></br>\r\n                                    <input type=\"button\" class=\"btnC\" value=\"수정\" onClick={this.displayUpdateClick}></input>                                    \r\n                                    <input type=\"button\" class=\"btnC\" value=\"삭제\" onClick={this.displayDeleteClick}></input> */}\r\n                                {/* </div>\r\n                                <div className=\"list\" style={{display: this.state.show_update}}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow className=\"TableRow\">\r\n                                            <TableCell><b>제목 : {this.props.boardTitle}</b></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell><b>내용 : </b></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                        <TableCell>\r\n                                                <textarea name=\"boardContent\">\r\n                                                    {this.props.boardContent}\r\n                                                </textarea>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                <input type=\"file\" name=\"boardFile1\"/>\r\n                                                <input type=\"file\" name=\"boardFile2\"/>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                    </Table>\r\n                                    <br></br>\r\n                                    <input type=\"submit\" class=\"btnC\" value=\"수정하기\"></input>                                    \r\n                                </div>\r\n                            </form> */}\r\n                            {/* 삭제 화면 */}\r\n                            {/* <div className=\"delete\" style={{display: this.state.show_delete}}>\r\n                                <form action=\"/api/boardDelete\" method=\"POST\">\r\n                                    <input type=\"hidden\" name=\"boardNo\" value={this.props.boardNo} />\r\n                                    <Table>\r\n                                        <TableRow>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell>\r\n                                                <span align=\"center\">삭제하시겠습니까?</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <input class=\"btnC\" type=\"submit\" value=\"삭제\" color=\"primary\" />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </Table>\r\n                                </form> */}\r\n                                </div>\r\n                            </form>\r\n                        </td>\r\n                    </tr>   \r\n                </tbody> \r\n            </Router>\r\n        )         \r\n    }\r\n}\r\nexport default BoardList;"]},"metadata":{},"sourceType":"module"}