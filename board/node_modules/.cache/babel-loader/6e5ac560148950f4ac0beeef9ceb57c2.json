{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev76\\\\workspace_react\\\\board\\\\src\\\\components\\\\MainList.js\";\nimport React, { Component } from 'react';\nimport { Table, TableCell, TableHead, TableRow, AppBar } from '@material-ui/core';\nimport Header from './Header';\nimport '../css/App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BoardList from './BoardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/boardList'); // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\n\n      const body = await response.json();\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      board: res\n    })) // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        display: \"flex\",\n        alignItems: \"center\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          align: \"center\",\n          children: \" \\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"TITLE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"CONTENT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"EMAIL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"REGDATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), this.state.board ? this.state.board.map((b, index) => {\n          return /*#__PURE__*/_jsxDEV(BoardList, {\n            board_no: b.BOARD_NO,\n            board_title: b.BOARD_TITLE,\n            board_content: b.BOARD_CONTENT,\n            board_email: b.BOARD_EMAIL,\n            board_regdate: b.BOARD_REGDATE\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 32\n          }, this);\n        }) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MainList;","map":{"version":3,"sources":["C:/Dev76/workspace_react/board/src/components/MainList.js"],"names":["React","Component","Table","TableCell","TableHead","TableRow","AppBar","Header","BrowserRouter","Router","BoardList","MainList","state","board","callApi","response","fetch","body","json","componentDidMount","then","res","setState","catch","err","console","log","render","map","b","index","BOARD_NO","BOARD_TITLE","BOARD_CONTENT","BOARD_EMAIL","BOARD_REGDATE"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport{Table, TableCell, TableHead, TableRow, AppBar} from '@material-ui/core';\r\nimport Header from './Header';\r\nimport '../css/App.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\n\r\nclass MainList extends Component {\r\n\r\n    // callApi : fetch()를 통해 select -> response -> componentDidMount() res -> setState(board) -> state.board가 수정 -> BoardList에 props 형태로 전달\r\n    state = {\r\n        board : ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callApi()                        \r\n            .then(res => this.setState({board: res}))    // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        const response = await fetch('/api/boardList');  // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Router>\r\n                <div display=\"flex\" alignItems=\"center\" justify=\"center\">\r\n                    <AppBar position=\"static\">\r\n                        <div><Header /></div>\r\n                    </AppBar>\r\n                    <br/>\r\n\r\n                    <h3 align=\"center\"> 게시판 목록 </h3>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell><b>NO</b></TableCell>\r\n                                <TableCell><b>TITLE</b></TableCell>\r\n                                <TableCell><b>CONTENT</b></TableCell>\r\n                                <TableCell><b>EMAIL</b></TableCell>\r\n                                <TableCell><b>REGDATE</b></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                    </Table>\r\n                    {/* setState()애 의해 board값이 select한 결과로 변경 후,  BoardList에 porps 형태로 board_tbl 테이블의 게시판 정보 데이터 전달 */}\r\n                    {this.state.board ? this.state.board.map((b, index) => {\r\n                        return <BoardList key={index} board_no={b.BOARD_NO} board_title={b.BOARD_TITLE}\r\n                                    board_content={b.BOARD_CONTENT} board_email={b.BOARD_EMAIL} board_regdate={b.BOARD_REGDATE} />\r\n                    }) : ''\r\n                    }\r\n\r\n                </div>\r\n            </Router>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainList;"]},"metadata":{},"sourceType":"module"}