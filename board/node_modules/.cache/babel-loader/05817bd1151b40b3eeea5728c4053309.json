{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DataUtils_1 = require(\"./DataUtils\");\n\nvar groupMark = {};\n\nexports.updateExpandedGroups = function (groupsExpanded, groupKey) {\n  var newGroupsExpanded = groupsExpanded.filter(function (ge) {\n    return JSON.stringify(ge) !== JSON.stringify(groupKey);\n  });\n\n  if (newGroupsExpanded.length === groupsExpanded.length) {\n    newGroupsExpanded.push(groupKey);\n  }\n\n  return newGroupsExpanded;\n};\n\nexports.getExpandedGroups = function (groupedData) {\n  return groupedData.filter(function (g) {\n    return g.groupMark === groupMark;\n  }).map(function (g) {\n    return g.key;\n  });\n};\n\nexports.getGroupedData = function (data, groups, groupedColumns, groupsExpanded) {\n  var grouped = exports.getGroupedStructure(data, groups, groupedColumns, 0, groupsExpanded);\n  return exports.convertToFlat(grouped);\n};\n\nexports.convertToFlat = function (grouped, key) {\n  if (key === void 0) {\n    key = [];\n  }\n\n  var result = [];\n  grouped.forEach(function (value, groupValue) {\n    var groupKey = __spreadArrays(key);\n\n    groupKey.push(groupValue);\n    result.push({\n      groupMark: groupMark,\n      key: groupKey,\n      value: groupValue\n    });\n    result = __spreadArrays(result, Array.isArray(value) ? value : exports.convertToFlat(value, groupKey));\n  });\n  return result;\n};\n\nexports.getGroupedStructure = function (data, groups, groupedColumns, expandedDeep, groupsExpanded) {\n  if (expandedDeep === void 0) {\n    expandedDeep = 0;\n  }\n\n  groups = __spreadArrays(groups);\n  var group = groups.shift();\n\n  if (group) {\n    var column_1 = groupedColumns && groupedColumns.find(function (g) {\n      return g.key === group.columnKey;\n    });\n\n    if (column_1) {\n      var grouped_1 = exports.groupBy(data, function (item) {\n        return DataUtils_1.getValueByColumn(item, column_1);\n      });\n      grouped_1.forEach(function (value, key) {\n        var groupExpandedItems = groupsExpanded && groupsExpanded.filter(function (ge) {\n          return ge[expandedDeep] === key;\n        });\n        var isThisGroupExpanded = !groupExpandedItems || groupExpandedItems.some(function (ge) {\n          return ge.length === expandedDeep + 1;\n        });\n\n        if (isThisGroupExpanded) {\n          var newStructure = exports.getGroupedStructure(value, groups, groupedColumns, expandedDeep + 1, groupExpandedItems && groupExpandedItems.filter(function (ge) {\n            return ge.length > expandedDeep + 1;\n          }));\n\n          if (newStructure) {\n            grouped_1.set(key, newStructure);\n          }\n        } else {\n          grouped_1.set(key, []);\n        }\n      });\n      return grouped_1;\n    }\n  }\n};\n\nexports.groupBy = function (data, keyGetter, isEmptyValue) {\n  if (isEmptyValue === void 0) {\n    isEmptyValue = false;\n  }\n\n  var map = new Map();\n  data.forEach(function (item) {\n    var key = keyGetter(item);\n\n    if (isEmptyValue) {\n      map.set(key, []);\n    } else {\n      var collection = map.get(key);\n\n      if (!collection) {\n        map.set(key, [item]);\n      } else {\n        collection.push(item);\n      }\n    }\n  });\n  return map;\n};\n\nexports.getGroupMark = function () {\n  return groupMark;\n};\n\nexports.getGroupText = function (value, column, format) {\n  return format ? format({\n    column: column,\n    value: value\n  }) : \"\" + (column && column.title ? column.title + ': ' : '') + value;\n};","map":{"version":3,"sources":["D:/Dev76/hms_react/board/node_modules/ka-table/Utils/GroupUtils.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","DataUtils_1","require","groupMark","updateExpandedGroups","groupsExpanded","groupKey","newGroupsExpanded","filter","ge","JSON","stringify","push","getExpandedGroups","groupedData","g","map","key","getGroupedData","data","groups","groupedColumns","grouped","getGroupedStructure","convertToFlat","result","forEach","groupValue","isArray","expandedDeep","group","shift","column_1","find","columnKey","grouped_1","groupBy","item","getValueByColumn","groupExpandedItems","isThisGroupExpanded","some","newStructure","set","keyGetter","isEmptyValue","Map","collection","get","getGroupMark","getGroupText","column","format","title"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DataUtils_1 = require(\"./DataUtils\");\r\nvar groupMark = {};\r\nexports.updateExpandedGroups = function (groupsExpanded, groupKey) {\r\n    var newGroupsExpanded = groupsExpanded.filter(function (ge) { return JSON.stringify(ge) !== JSON.stringify(groupKey); });\r\n    if (newGroupsExpanded.length === groupsExpanded.length) {\r\n        newGroupsExpanded.push(groupKey);\r\n    }\r\n    return newGroupsExpanded;\r\n};\r\nexports.getExpandedGroups = function (groupedData) {\r\n    return groupedData\r\n        .filter(function (g) { return g.groupMark === groupMark; })\r\n        .map(function (g) { return g.key; });\r\n};\r\nexports.getGroupedData = function (data, groups, groupedColumns, groupsExpanded) {\r\n    var grouped = exports.getGroupedStructure(data, groups, groupedColumns, 0, groupsExpanded);\r\n    return exports.convertToFlat(grouped);\r\n};\r\nexports.convertToFlat = function (grouped, key) {\r\n    if (key === void 0) { key = []; }\r\n    var result = [];\r\n    grouped.forEach(function (value, groupValue) {\r\n        var groupKey = __spreadArrays(key);\r\n        groupKey.push(groupValue);\r\n        result.push({ groupMark: groupMark, key: groupKey, value: groupValue });\r\n        result = __spreadArrays(result, (Array.isArray(value) ? value : exports.convertToFlat(value, groupKey)));\r\n    });\r\n    return result;\r\n};\r\nexports.getGroupedStructure = function (data, groups, groupedColumns, expandedDeep, groupsExpanded) {\r\n    if (expandedDeep === void 0) { expandedDeep = 0; }\r\n    groups = __spreadArrays(groups);\r\n    var group = groups.shift();\r\n    if (group) {\r\n        var column_1 = groupedColumns && groupedColumns.find(function (g) { return g.key === group.columnKey; });\r\n        if (column_1) {\r\n            var grouped_1 = exports.groupBy(data, function (item) { return DataUtils_1.getValueByColumn(item, column_1); });\r\n            grouped_1.forEach(function (value, key) {\r\n                var groupExpandedItems = groupsExpanded && groupsExpanded.filter(function (ge) { return ge[expandedDeep] === key; });\r\n                var isThisGroupExpanded = !groupExpandedItems\r\n                    || groupExpandedItems.some(function (ge) { return ge.length === expandedDeep + 1; });\r\n                if (isThisGroupExpanded) {\r\n                    var newStructure = exports.getGroupedStructure(value, groups, groupedColumns, expandedDeep + 1, groupExpandedItems && groupExpandedItems.filter(function (ge) { return ge.length > expandedDeep + 1; }));\r\n                    if (newStructure) {\r\n                        grouped_1.set(key, newStructure);\r\n                    }\r\n                }\r\n                else {\r\n                    grouped_1.set(key, []);\r\n                }\r\n            });\r\n            return grouped_1;\r\n        }\r\n    }\r\n};\r\nexports.groupBy = function (data, keyGetter, isEmptyValue) {\r\n    if (isEmptyValue === void 0) { isEmptyValue = false; }\r\n    var map = new Map();\r\n    data.forEach(function (item) {\r\n        var key = keyGetter(item);\r\n        if (isEmptyValue) {\r\n            map.set(key, []);\r\n        }\r\n        else {\r\n            var collection = map.get(key);\r\n            if (!collection) {\r\n                map.set(key, [item]);\r\n            }\r\n            else {\r\n                collection.push(item);\r\n            }\r\n        }\r\n    });\r\n    return map;\r\n};\r\nexports.getGroupMark = function () { return groupMark; };\r\nexports.getGroupText = function (value, column, format) {\r\n    return format ? format({ column: column, value: value }) : \"\" + (column && column.title ? column.title + ': ' : '') + value;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}