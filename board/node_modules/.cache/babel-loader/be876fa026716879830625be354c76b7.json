{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.updateChildrenTop = function (elementRef) {\n  if (elementRef && elementRef.current && elementRef.current.previousSibling && elementRef.current.childNodes) {\n    var bound = elementRef.current.previousSibling.getBoundingClientRect();\n\n    if (bound) {\n      var newValue_1 = bound.height + \"px\";\n\n      if (newValue_1 !== elementRef.current.style.top) {\n        elementRef.current.childNodes.forEach(function (element) {\n          element.style.top = newValue_1;\n        });\n        elementRef.current.style.top = newValue_1;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/Dev76/hms_react/board/node_modules/ka-table/Utils/DomUtils.js"],"names":["Object","defineProperty","exports","value","updateChildrenTop","elementRef","current","previousSibling","childNodes","bound","getBoundingClientRect","newValue_1","height","style","top","forEach","element"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACAD,OAAO,CAACE,iBAAR,GAA4B,UAAUC,UAAV,EAAsB;AAC9C,MAAIA,UAAU,IAAIA,UAAU,CAACC,OAAzB,IAAoCD,UAAU,CAACC,OAAX,CAAmBC,eAAvD,IAA0EF,UAAU,CAACC,OAAX,CAAmBE,UAAjG,EAA6G;AACzG,QAAIC,KAAK,GAAGJ,UAAU,CAACC,OAAX,CAAmBC,eAAnB,CAAmCG,qBAAnC,EAAZ;;AACA,QAAID,KAAJ,EAAW;AACP,UAAIE,UAAU,GAAGF,KAAK,CAACG,MAAN,GAAe,IAAhC;;AACA,UAAID,UAAU,KAAKN,UAAU,CAACC,OAAX,CAAmBO,KAAnB,CAAyBC,GAA5C,EAAiD;AAC7CT,QAAAA,UAAU,CAACC,OAAX,CAAmBE,UAAnB,CAA8BO,OAA9B,CAAsC,UAAUC,OAAV,EAAmB;AACrDA,UAAAA,OAAO,CAACH,KAAR,CAAcC,GAAd,GAAoBH,UAApB;AACH,SAFD;AAGAN,QAAAA,UAAU,CAACC,OAAX,CAAmBO,KAAnB,CAAyBC,GAAzB,GAA+BH,UAA/B;AACH;AACJ;AACJ;AACJ,CAbD","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.updateChildrenTop = function (elementRef) {\r\n    if (elementRef && elementRef.current && elementRef.current.previousSibling && elementRef.current.childNodes) {\r\n        var bound = elementRef.current.previousSibling.getBoundingClientRect();\r\n        if (bound) {\r\n            var newValue_1 = bound.height + \"px\";\r\n            if (newValue_1 !== elementRef.current.style.top) {\r\n                elementRef.current.childNodes.forEach(function (element) {\r\n                    element.style.top = newValue_1;\r\n                });\r\n                elementRef.current.style.top = newValue_1;\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}