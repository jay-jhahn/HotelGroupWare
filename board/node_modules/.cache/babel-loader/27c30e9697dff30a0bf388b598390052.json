{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev76\\\\hms_react\\\\board\\\\src\\\\components\\\\BoardList.js\";\nimport React, { Component } from 'react';\nimport { Table, TableCell, TableRow, TableHead, Input } from '@material-ui/core';\nimport \"ka-table/style.css\";\nimport moment from 'moment'; // 날짜 타입\n// import '../css/default.css';\n\nimport '../css/Board.css';\nimport { Link, BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BoardDetail from './BoardDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BoardList extends Component {\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      board: res\n    })) // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\n    .catch(err => console.log(err));\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/boardDetail'); // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\n\n      const body = await response.json();\n      return body;\n    };\n\n    this.displayShowClick = e => {\n      if (this.state.show_detail === \"block\") {\n        this.setState({\n          show_detail: \"none\",\n          show_delete: \"none\",\n          show_update: \"none\"\n        });\n      } else {\n        this.setState({\n          show_detail: \"block\",\n          show_delete: \"none\",\n          show_update: \"none\"\n        });\n      }\n    };\n\n    this.displayUpdateClick = e => {\n      if (this.state.show_update === \"block\") {\n        this.setState({\n          show_detail: \"none\",\n          show_delete: \"none\",\n          show_update: \"none\"\n        });\n      } else {\n        this.setState({\n          show_detail: \"none\",\n          show_delete: \"none\",\n          show_update: \"block\"\n        });\n      }\n    };\n\n    this.displayDeleteClick = e => {\n      this.setState({\n        show_detail: \"none\",\n        show_update: \"none\",\n        show_delete: \"block\"\n      });\n    };\n\n    this.state = {\n      detail: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/boardList'); // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\n\n      const body = await response.json();\n      return body;\n    };\n\n    this.state = {\n      value: '',\n      show_update: \"none\",\n      show_delete: \"none\",\n      show_detail: \"none\"\n    };\n  } // 상세버튼 클릭\n\n\n  // 생명주기\n\n  /* componentDidAmont() 메서드 : 컴포넌트가 마운트 된 직후 호출되며, 데이터로딩과 같은 작업 등에 재정의\r\n  예 ) List에 특정 item들을 출력하고자 할때 item에 들어갈 Data가 Server에 존재한다면 Server에서 읽어와서\r\n  item 데이터가 state에 존재시 이 state에 데이터를 setting하는 작업\r\n  마운트 즉 React 컴포넌트가 실제 DOM에 삽입된 후 서버로부터 데이터를 읽어와서 setState후 화면에 rerendering */\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      board: res\n    })) // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    let regdate = this.props.writeDate;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        class: \"ka-tbody\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"ka-tr ka-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                class: \"btnD\",\n                value: \"\\uC0C1\\uC138\",\n                onClick: this.displayShowClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: this.props.boardTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: this.props.boardContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: this.props.readCnt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: moment(this.props.writeDate).format('YYYY-MM-DD hh:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"ka-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"ka-cell-text\",\n              children: moment(this.props.updateDate).format('YYYY-MM-DD hh:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"/api/boardUpdate\",\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"boardNo\",\n                value: this.props.boardNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list\",\n                style: {\n                  display: this.state.show_detail\n                },\n                display: \"block\",\n                children: this.state.board ? this.state.board.map((b, index) => {\n                  return /*#__PURE__*/_jsxDEV(BoardDetail, {\n                    boardTitle: b.BOARDTITLE,\n                    boardContent: b.BOARDCONTENT,\n                    boardFile1: b.BOARDFILE1,\n                    boardFile2: b.BOARDFILE2,\n                    updateDate: b.UPDATEDATE,\n                    readCnt: b.READCNT,\n                    writeDate: b.WRITEDATE,\n                    boardNo: b.BOARDNO\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 48\n                  }, this);\n                }) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list\",\n                style: {\n                  display: this.state.show_update\n                },\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(TableHead, {\n                    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                      className: \"TableRow\",\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: [\"\\uC81C\\uBAA9 : \", this.props.boardTitle]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 56\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"\\uB0B4\\uC6A9 : \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 56\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                          name: \"boardContent\",\n                          children: this.props.boardContent\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"file\",\n                          name: \"boardFile1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"file\",\n                          name: \"boardFile2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  class: \"btnC\",\n                  value: \"\\uC218\\uC815\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete\",\n              style: {\n                display: this.state.show_delete\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                action: \"/api/boardDelete\",\n                method: \"POST\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"hidden\",\n                  name: \"boardNo\",\n                  value: this.props.boardNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        align: \"center\",\n                        children: \"\\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        class: \"btnC\",\n                        type: \"submit\",\n                        value: \"\\uC0AD\\uC81C\",\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BoardList;","map":{"version":3,"sources":["D:/Dev76/hms_react/board/src/components/BoardList.js"],"names":["React","Component","Table","TableCell","TableRow","TableHead","Input","moment","Link","BrowserRouter","Router","Route","Switch","BoardDetail","BoardList","componentDidMount","callApi","then","res","setState","board","catch","err","console","log","constructor","props","state","response","fetch","body","json","displayShowClick","e","show_detail","show_delete","show_update","displayUpdateClick","displayDeleteClick","detail","value","render","regdate","writeDate","boardTitle","boardContent","readCnt","format","updateDate","boardNo","display","map","b","index","BOARDTITLE","BOARDCONTENT","BOARDFILE1","BOARDFILE2","UPDATEDATE","READCNT","WRITEDATE","BOARDNO"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Table, TableCell, TableRow, TableHead, Input } from '@material-ui/core';\r\nimport \"ka-table/style.css\";\r\nimport moment from 'moment';  // 날짜 타입\r\n// import '../css/default.css';\r\nimport '../css/Board.css';\r\nimport { Link, BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport BoardDetail from './BoardDetail';\r\n\r\n\r\n\r\n\r\nclass BoardList extends Component {\r\n\r\n    state = {\r\n        board : ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callApi()                        \r\n            .then(res => this.setState({board: res}))    // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    callApi = async () => {\r\n        const response = await fetch('/api/boardDetail');  // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n       \r\n        this.state = {\r\n            value : '',\r\n            show_update: \"none\",\r\n            show_delete: \"none\",\r\n            show_detail: \"none\"\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 상세버튼 클릭\r\n    displayShowClick = (e) => {\r\n        if(this.state.show_detail === \"block\") {\r\n            this.setState({\r\n                show_detail: \"none\",\r\n                show_delete: \"none\",\r\n                show_update: \"none\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                show_detail: \"block\",\r\n                show_delete: \"none\",\r\n                show_update: \"none\"\r\n            }) \r\n        }\r\n    }\r\n\r\n    \r\n    // 수정버튼 클릭\r\n    displayUpdateClick = (e) => {\r\n        if(this.state.show_update === \"block\") {\r\n            this.setState({\r\n                show_detail: \"none\",\r\n                show_delete: \"none\",\r\n                show_update: \"none\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                show_detail: \"none\",\r\n                show_delete: \"none\",\r\n                show_update: \"block\"\r\n            }) \r\n        }\r\n    }   \r\n\r\n    // 삭제버튼 클릭\r\n    displayDeleteClick = (e) => {\r\n        this.setState({\r\n            show_detail: \"none\",\r\n            show_update: \"none\",\r\n            show_delete: \"block\"\r\n        });\r\n    }\r\n\r\n    state = {\r\n        detail : ''\r\n    }\r\n\r\n    // 생명주기\r\n    /* componentDidAmont() 메서드 : 컴포넌트가 마운트 된 직후 호출되며, 데이터로딩과 같은 작업 등에 재정의\r\n    예 ) List에 특정 item들을 출력하고자 할때 item에 들어갈 Data가 Server에 존재한다면 Server에서 읽어와서\r\n    item 데이터가 state에 존재시 이 state에 데이터를 setting하는 작업\r\n    마운트 즉 React 컴포넌트가 실제 DOM에 삽입된 후 서버로부터 데이터를 읽어와서 setState후 화면에 rerendering */\r\n    componentDidMount() {\r\n        this.callApi()                        \r\n            .then(res => this.setState({board: res}))    // arrow function : 화살표 함수 : 변수를 전달하면서 기능구현\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        const response = await fetch('/api/boardList');  // await fetch('url')로 json 형식으로 가져온 리스트(boardList)를 받아와서 response에 담는다.\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n    \r\n    render() {\r\n         let regdate = this.props.writeDate;\r\n        return(\r\n            <Router>\r\n                <tbody class=\"ka-tbody\">\r\n                    <tr class=\"ka-tr ka-row\">\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">\r\n                                <input type=\"button\" class=\"btnD\" value=\"상세\" onClick={this.displayShowClick}></input>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{this.props.boardTitle}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{this.props.boardContent}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{this.props.readCnt}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{moment(this.props.writeDate).format('YYYY-MM-DD hh:mm')}</div>\r\n                        </td>\r\n                        <td class=\"ka-cell\">\r\n                            <div class=\"ka-cell-text\">{moment(this.props.updateDate).format('YYYY-MM-DD hh:mm')}</div>\r\n                        </td>\r\n                    </tr> \r\n                    <tr>\r\n                        <td colSpan=\"5\">\r\n                            <form action=\"/api/boardUpdate\" method=\"POST\">\r\n                                <input type=\"hidden\" name=\"boardNo\" value={this.props.boardNo} />\r\n                                <div className=\"list\" style={{display: this.state.show_detail}} display=\"block\" >  \r\n                                    {/* <BoardDetail /> */}\r\n                                    {this.state.board ? this.state.board.map((b, index) => {\r\n                                        return <BoardDetail key={index} boardTitle={b.BOARDTITLE} boardContent={b.BOARDCONTENT}\r\n                                        boardFile1={b.BOARDFILE1} boardFile2={b.BOARDFILE2} updateDate={b.UPDATEDATE}\r\n                                        readCnt={b.READCNT} writeDate={b.WRITEDATE} boardNo={b.BOARDNO}/>\r\n                                        }) : ''\r\n                                    }\r\n                                    {/* <Table>\r\n                                        <TableHead>\r\n                                            <TableRow className=\"TableRow\">\r\n                                                <TableCell><b>제목 : {this.props.boardTitle}</b></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><b>내용 : </b></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                            <TableCell>\r\n                                                    <div>\r\n                                                        {this.props.boardContent}\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><img src={this.props.boardFile1}></img></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><img src={this.props.boardFile2}></img></TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><b>등록일 : </b>{moment(this.props.writeDate).format('YYYY-MM-DD hh:mm')}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell><b>수정일 : </b>{moment(this.props.updateDate).format('YYYY-MM-DD hh:mm')}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                    </Table> */}\r\n                                    {/* <br></br>\r\n                                    <input type=\"button\" class=\"btnC\" value=\"수정\" onClick={this.displayUpdateClick}></input>                                    \r\n                                    <input type=\"button\" class=\"btnC\" value=\"삭제\" onClick={this.displayDeleteClick}></input> */}\r\n                                </div>\r\n                                <div className=\"list\" style={{display: this.state.show_update}}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow className=\"TableRow\">\r\n                                            <TableCell><b>제목 : {this.props.boardTitle}</b></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell><b>내용 : </b></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                        <TableCell>\r\n                                                <textarea name=\"boardContent\">\r\n                                                    {this.props.boardContent}\r\n                                                </textarea>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                <input type=\"file\" name=\"boardFile1\"/>\r\n                                                <input type=\"file\" name=\"boardFile2\"/>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                    </Table>\r\n                                    <br></br>\r\n                                    <input type=\"submit\" class=\"btnC\" value=\"수정하기\"></input>                                    \r\n                                </div>\r\n                            </form>\r\n                            {/* 삭제 화면 */}\r\n                            <div className=\"delete\" style={{display: this.state.show_delete}}>\r\n                                <form action=\"/api/boardDelete\" method=\"POST\">\r\n                                    <input type=\"hidden\" name=\"boardNo\" value={this.props.boardNo} />\r\n                                    <Table>\r\n                                        <TableRow>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell>\r\n                                                <span align=\"center\">삭제하시겠습니까?</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <input class=\"btnC\" type=\"submit\" value=\"삭제\" color=\"primary\" />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </Table>\r\n                                </form>\r\n                            </div>\r\n                        </td>\r\n                    </tr>   \r\n                </tbody> \r\n            </Router>\r\n        )         \r\n    }\r\n}\r\nexport default BoardList;"]},"metadata":{},"sourceType":"module"}